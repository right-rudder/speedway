---
const ENROLL_FORM_WEBHOOK_URL = import.meta.env.ENROLL_WEBHOOK_URL;
const PORTAL_API_KEY = import.meta.env.PORTAL_API_KEY;
---

<form class="mx-auto max-w-xl pb-10" id="contact_form">
  <div class="grid grid-cols-1 gap-x-8 gap-y-2 sm:grid-cols-2">
    <div>
      <!-- <label for="first-name" class="block text-sm leading-6 text-accent-100">First name</label> -->
      <div class="mt-2.5">
        <input
          type="text"
          name="first-name"
          id="first-name"
          autocomplete="given-name"
          placeholder="First Name"
          required
          class="block w-full py-2 text-accent-100 shadow-sm ring-inset ring-gray-300 placeholder:text-gray-300 bg-transparent border-b-[1px] border-gray-300 sm:text-sm sm:leading-6 outline-none"
        />
      </div>
    </div>
    <div>
      <!-- <label for="last-name" class="block text-sm leading-6 text-accent-100">Last name</label> -->
      <div class="mt-2.5">
        <input
          type="text"
          name="last-name"
          id="last-name"
          autocomplete="family-name"
          placeholder="Last Name"
          required
          class="block w-full py-2 text-accent-100 shadow-sm ring-inset ring-gray-300 placeholder:text-gray-300 bg-transparent border-b-[1px] border-gray-300 sm:text-sm sm:leading-6 outline-none"
        />
      </div>
    </div>
    <div class="sm:col-span-2">
      <!-- <label for="email" class="block text-sm leading-6 text-accent-100">Email</label> -->
      <div class="mt-2.5">
        <input
          type="email"
          name="email"
          id="email"
          autocomplete="email"
          placeholder="Email Address"
          required
          class="block w-full py-2 text-accent-100 shadow-sm ring-inset ring-gray-300 placeholder:text-gray-300 bg-transparent border-b-[1px] border-gray-300 sm:text-sm sm:leading-6 outline-none"
        />
      </div>
    </div>
    <p class="ohno">
      <label>
        Don't fill this out if you're human: <input name="confirm-email" />
      </label>
    </p>
    <div class="sm:col-span-2">
      <!-- <label for="phone-number" class="block text-sm leading-6 text-accent-100">Phone number</label> -->
      <div class="relative mt-2.5">
        <input
          type="tel"
          name="phone-number"
          id="phone-number"
          autocomplete="tel"
          placeholder="Phone Number"
          required
          class="block w-full py-2 text-accent-100 shadow-sm ring-inset ring-gray-300 placeholder:text-gray-300 bg-transparent border-b-[1px] border-gray-300 sm:text-sm sm:leading-6 outline-none"
        />
      </div>
    </div>
    <div class="sm:col-span-2">
      <!-- <label for="message" class="block text-sm leading-6 text-accent-100">How can we help?</label> -->
      <div class="mt-2.5">
        <!-- Need to get align bottom... -->
        <label
          for="interest-program"
          class="block mb-0 font-extralight text-accent-100"
        >
          To which program are you interested in enrolling?
        </label>
        <select
          required
          id="interest-program"
          name="interest-program"
          class="block font-extralight w-full py-2 text-accent-100 shadow-sm ring-inset ring-gray-300 placeholder:text-gray-300 bg-transparent border-b-[1px] border-gray-300 sm:text-sm sm:leading-6 outline-none"
        >
          <option class="bg-accent-950">Fast-Track Program (FTFD)</option>
          <option class="bg-accent-950">Private Pilot License (PPL)</option>
          <option class="bg-accent-950">Instrument Rating (IR)</option>
          <option class="bg-accent-950">Commercial Pilot License (CPL)</option>
          <option class="bg-accent-950">Multi-Engine Rating (ME)</option>
          <option class="bg-accent-950"
            >Certified Flight Instructor (CFI)</option
          >
          <option class="bg-accent-950">Other</option>
        </select>
      </div>
      <div class="mt-2.5">
        <!-- Need to get align bottom... -->
        <textarea
          name="message"
          id="message"
          rows="4"
          placeholder="Extra Information (Optional)"
          class="block w-full py-2 text-accent-100 shadow-sm ring-inset ring-gray-300 placeholder:text-gray-300 bg-transparent border-b-[1px] border-gray-300 sm:text-sm sm:leading-6 outline-none"
        ></textarea>
      </div>
    </div>
    <div class="flex gap-x-4 sm:col-span-2">
      <div class="flex h-6 items-center">
        <button
          type="button"
          id="terms-toggle"
          class="flex w-8 flex-none cursor-pointer rounded-full p-px ring-1 ring-inset ring-primary-900/5 transition-colors duration-200 ease-in-out focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-900 bg-gray-200"
          role="switch"
          aria-checked="false"
          aria-labelledby="switch-1-label"
        >
          <span class="sr-only">
            I agree to terms & conditions provided by the company.
          </span>
          <span
            id="terms-thumb"
            class="h-4 w-4 transform rounded-full bg-black shadow-sm ring-1 ring-gray-900/5 transition duration-200 ease-in-out translate-x-0"
            aria-hidden="true"></span>
        </button>
        <input type="hidden" id="agree-terms" name="agree-terms" value="no" />
      </div>
      <label class="text-sm leading-6 text-gray-200" id="switch-1-label">
        I agree to the <a
          href="/privacy-policy"
          target="_blank"
          class="text-primary-700 hover:text-mariner-700 font-semibold"
          >Privacy Policy</a
        > and <a
          href="/terms-of-service"
          target="_blank"
          class="text-primary-700 hover:text-mariner-700 font-semibold"
          >Terms of Service</a
        > provided by the company. By providing my phone number, I agree to receive
        text messages from the business.
      </label>
    </div>
  </div>
  <div class="mt-10">
    <button type="submit" id="submit-btn" class="btn-accent">Enroll Now</button>
  </div>
</form>

<script define:vars={{ ENROLL_FORM_WEBHOOK_URL, PORTAL_API_KEY }}>
  const toggle = document.getElementById("terms-toggle");
  const thumb = document.getElementById("terms-thumb");
  const hiddenInput = document.getElementById("agree-terms");
  const submitBtn = document.getElementById("submit-btn");

  let isChecked = false;

  toggle.addEventListener("click", () => {
    isChecked = !isChecked;
    hiddenInput.value = isChecked ? "yes" : "no";
    toggle.setAttribute("aria-checked", isChecked);
    toggle.classList.toggle("bg-mariner-500", isChecked);
    toggle.classList.toggle("bg-gray-200", !isChecked);
    thumb.classList.toggle("translate-x-3.5", isChecked);
    thumb.classList.toggle("translate-x-0", !isChecked);

    if (isChecked) {
      submitBtn.disabled = false;
      submitBtn.classList.remove(
        "cursor-not-allowed",
        "bg-gray-400",
        "hover:bg-gray-400",
        "hover:text-mariner-950",
      );
    } else {
      submitBtn.disabled = true;
      submitBtn.classList.add(
        "cursor-not-allowed",
        "bg-gray-400",
        "hover:bg-gray-400",
        "hover:text-mariner-950",
      );
    }
  });
  submitBtn.disabled = true;
  submitBtn.classList.add(
    "cursor-not-allowed",
    "bg-gray-400",
    "hover:bg-gray-400",
    "hover:text-mariner-950",
  );
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("contact_form");
    if (!form) {
      console.error("Form element not found.");
      return;
    }

    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      const formData = new FormData(form);
      const confirmEmail = formData.get("confirm-email")?.trim();
      if (confirmEmail) return;

      const webhookURL = ENROLL_FORM_WEBHOOK_URL;
      const apiKey = PORTAL_API_KEY;

      const urlEncodedBody = new URLSearchParams(formData).toString();

      const excludedFields = [
        "first-name",
        "last-name",
        "email",
        "phone-number",
        "confirm-email",
        "agree-terms",
      ];

      const metadata = {};

      for (const [key, value] of formData.entries()) {
        if (!excludedFields.includes(key)) {
          metadata[key] = value?.trim?.() ?? value;
        }
      }

      const jsonBody = {
        first_name: formData.get("first-name")?.trim() || "",
        last_name: formData.get("last-name")?.trim() || "",
        email: formData.get("email")?.trim() || "",
        phone: formData.get("phone-number")?.trim() || "",
        campaign: "enrollment",
        account_random_id: "ac_x378a6p2",
        metadata: metadata,
      };

      try {
        const [ghlRes, portalRes] = await Promise.all([
          fetch(webhookURL, {
            method: "POST",
            headers: {
              "Content-Type": "application/x-www-form-urlencoded",
            },
            body: urlEncodedBody,
          }),
          fetch("https://portal.rightruddermarketing.com/api/leads", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Accept: "application/json",
              "x-api-key": apiKey,
            },
            body: JSON.stringify(jsonBody),
          }),
        ]);

        if (ghlRes.ok && portalRes.ok) {
          window.location.href = "/contact-confirmation";
        } else {
          console.error("Submission failed", {
            ghlStatus: ghlRes.status,
            portalStatus: portalRes.status,
          });
        }
      } catch (err) {
        console.error("Submission error:", err);
      }
    });
  });
</script>

<style>
  .ohno {
    @apply hidden;
  }

  .translate-x-3.5 {
    transform: translateX(0.875rem); /* Tailwind's 3.5 = 14px */
  }
</style>
